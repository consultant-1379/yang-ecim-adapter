<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ericsson.ranexplorer.yangecimadapter</groupId>
    <artifactId>yang-ecim-adapter</artifactId>
    <version>1.1.65-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

    <artifactId>testsuite</artifactId>

    <properties>
        <path.to.java>/usr/bin/java</path.to.java>
        <server.port>2222</server.port>
        <node.port>22</node.port>
        <node.ip.address>192.168.100.1</node.ip.address>
        <server.username>netsim</server.username>
        <server.password>netsim</server.password>
        <server.listener>com.ericsson.ranexplorer.yangecimadapter.netconf.rpc.handler.config.listener.AdapterListener</server.listener>
    </properties>

    <profiles>
        <profile>
            <id>testsuite</id>
            <activation>
                <property>
                    <name>ts</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <configuration>
                            <testSourceDirectory>src/test/java</testSourceDirectory>
                            <skip>false</skip>
                            <excludes>
                                <exclude>**/*RealNodeIT.java</exclude>
                                <exclude>**/*ManualIT.java</exclude>
                                <exclude>**/*StabilityIT.java</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>realnode-tests</id>
            <activation>
                <property>
                    <name>realnode</name>
                </property>
            </activation>
            <properties>
                <!-- real node tests currently confined to Linkoping hub so below path is valid in hub,
                     can be overwritten by passing property -Dpath.to.java=... if required by designer -->
                <path.to.java>/proj/cdsadm100/tools/jdk/openjdk-8u171/bin/java</path.to.java>
                <server.port>2022</server.port>
                <node.port>2022</node.port>
                <node.ip.address>lienb4916</node.ip.address>
                <server.username>expert</server.username>
                <server.password>expert</server.password>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <configuration>
                            <excludes combine.self="override">
                                <!-- excluding below tests for moment until they are refactored to work with real node -->
                                <exclude>**/*EditConfigIT.java</exclude>
                                <exclude>**/*EditConfigPerformanceTimingIT.java</exclude>
                                <exclude>**/*AdapterPrefixIT.java</exclude>
                                <exclude>**/*ManualIT.java</exclude>
                                <exclude>**/*Stability*IT.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-adapter-server</id>
            <activation>
                <property>
                    <name>run-adapter-server</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>adapter-server</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/resources</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>check-openjdk-version</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${path.to.java}</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>-version</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <version>0.8</version>
                        <executions>
                            <execution>
                                <id>start-yang-ecim-adapter</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>yang-ecim-adapter</name>
                                    <workingDir>${project.build.directory}/resources</workingDir>
                                    <waitAfterLaunch>5</waitAfterLaunch>
                                    <arguments>
                                        <argument>${path.to.java}</argument>
                                        <argument>-Dlogback.configurationFile=logback.xml</argument>
                                        <argument>-jar</argument>
                                        <argument>${project.build.directory}/resources/adapter-server-${project.version}.jar</argument>
                                        <argument>ssh</argument>
                                        <argument>--port</argument>
                                        <argument>${server.port}</argument>
                                        <argument>--nodeport</argument>
                                        <argument>${node.port}</argument>
                                        <argument>-n</argument>
                                        <argument>${node.ip.address}</argument>
                                        <argument>-u</argument>
                                        <argument>${server.username}</argument>
                                        <argument>-p</argument>
                                        <argument>${server.password}</argument>
                                        <argument>-c</argument>
                                        <argument>${server.listener}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-all</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-all</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-docker</id>
            <activation>
                <property>
                    <name>run-docker</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-tests</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/resources</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/resources</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>start-docker-environment</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker-compose</executable>
                                    <workingDirectory>${project.build.directory}/resources</workingDirectory>
                                    <arguments>
                                        <argument>up</argument>
                                        <argument>-d</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-netsim-simulation-started</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <commandlineArgs>check_netsim_simulation.sh</commandlineArgs>
                                    <workingDirectory>${project.build.directory}/resources/utilities</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>store-docker-logs</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker-compose</executable>
                                    <workingDirectory>${project.build.directory}/resources</workingDirectory>
                                    <arguments>
                                        <argument>logs</argument>
                                        <argument>--no-color</argument>
                                        <argument>yang-ecim-adapter</argument>
                                    </arguments>
                                    <outputFile>${project.build.directory}/resources/yang-ecim-adapter.docker.log</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-docker-environment</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker-compose</executable>
                                    <workingDirectory>${project.build.directory}/resources</workingDirectory>
                                    <arguments>
                                        <argument>down</argument>
                                        <argument>-v</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.9</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.52</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.ericsson.ranexplorer.yangecimadapter</groupId>
            <artifactId>common-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.ranexplorer.yangecimadapter</groupId>
            <artifactId>data-transformer</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
